# Global logging configuration
#\u5728\u5f00\u53d1\u73af\u5883\u4e0b\u65e5\u5fd7\u7ea7\u522b\u8981\u8bbe\u7f6e\u6210DEBUG\uff0c\u751f\u4ea7\u73af\u5883\u8bbe\u7f6e\u6210info\u6216error
#DEBUG表示的是日志级别,log4j一般用的是优先级从高到低分别是ERROR、WARN、INFO、DEBUG这四种，若是info级别debug时则不会显示信息
#stdout指定的是日志输出的位置
log4j.rootLogger=DEBUG,stdout,errorout
# Console output...


#org.apache.log4j.ConsoleAppender表示输出为位置为控制台,输出的位置可进行选择+
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#org.apache.log4j.PatternLayout,表示可灵活的设置布局模式
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#设置的输出布局模式%p表示优先级 %t表示产生日志的线程
log4j.appender.stdout.layout.ConversionPattern=[%-5p] [%F:%L] %d{yyyy-MM-dd HH:mm:ss} :%m%n


#配置错误或者是警告输出文件
#org.apache.log4j.RollingFileAppender文件大小到一下程度新建文件
log4j.appender.errorout=org.apache.log4j.RollingFileAppender
#log文件输出地址


log4j.appender.errorout.Append = true
#表示优先级在warn以上的进行输出
log4j.appender.errorout.Threshold = WARN
#文件超过5000kb时新建文件
log4j.appender.errorout.MaxFileSize = 50000KB
log4j.appender.errorout.layout = org.apache.log4j.PatternLayout
log4j.appender.errorout.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n
